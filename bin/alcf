#!/usr/bin/env python

import sys
import pst
from alcf.cmds import CMDS

def main(cmd=None, *args, **kwargs):
	"""
alcf - Tool for processing of automatic lidar and ceilometer (ALC) data
and intercomparison with atmospheric models.

Usage:

	alcf <cmd> [<options>]
	alcf <cmd> --help

Arguments:

- cmd: command (see below)
- options: command options

Options:

--help: print help for command

Commands:

- convert: convert input instrument or model data to ALCF standard NetCDF
- model: extract model data at a point or along a track
- cosp: simulate lidar measurements from model data using COSP
- lidar: process lidar data
- stats: calculate cloud occurrence statistics
- plot: plot lidar data
- plot_stats: plot lidar statistics
	"""

	if cmd is None:
		sys.stderr.write(main.__doc__.strip() + '\n')
		return 1

	func = CMDS.get(cmd)
	if func is None:
		raise ValueError('Invalid command: %s' % cmd)
	try:
		func(*args, **kwargs)
	except TypeError as e:
		t, v, tb = sys.exc_info()
		if e.message.startswith('run() '):
			sys.stderr.write(func.__doc__.replace('`', '').strip() + '\n')
			return 1
		else:
			raise t, v, tb
	return 0

if __name__ == '__main__':
	argv = pst.decode(' '.join(sys.argv))
	args = [x for x in argv if type(x) is not dict]
	kwargs = {k: v for x in argv if type(x) is dict for k, v in x.items()}

	ret = main(*args[1:], **kwargs)
	sys.exit(ret)
